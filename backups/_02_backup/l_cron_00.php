<?php	// no need to refresh for now	die();	$games = 0;	$pgames = array();	$ranking = array();	$pplaces = array();	$gpd = array();		$date_start = strtotime('2012-11-01 00:00:00');	$date_end = strtotime('2012-12-31 23:59:00');	$path = 'http://arcturus.su/tenhou/gamerecords/7447/sca';		for ($i = $date_start; $i <= (time() + 8*60*60 < $date_end ? time() + 8*60*60 : $date_end); $i += 24*60*60) {		$day = date('Ymd', $i);		$f = fopen($path . $day . '.log', 'rb');				if ($f) {			if (!isset($gpd[$i])) {				$gpd[$i] = 0;			}						while ($line = fgets($f)) {				$ar = explode('|', $line);				$scores = end($ar);								$gametype = $ar[2];				// only kuitan ari and kuitan ari fast allowed				if (md5(trim($gametype)) != '21670224953821f8a0096236de5b13a7' && md5(trim($gametype)) != '38283f7700a3c76ede5e54b0ea4d23d7') {					continue;				}								$peoplez = explode(' ', $scores);								$game = array();				foreach ($peoplez as $person) {					if (empty($person)) {						continue;					}										$sc = explode('(', $person);										$points = substr( trim($sc[1]), 0, strlen(trim($sc[1])) - 1);										$game[$sc[0]] = (int) $points;				}								// removing sanma				if (count($game) < 4) {					continue;				}								$coef = 1.0; // 0 nonames				$pos = 1;				foreach ($game as $player => $points) {					if ($player == 'NoName') {						$coef -= 0.2;					} else if (!array_key_exists($player, $ranking)) {						$ranking[$player] = ($points + 30) * $coef;						$pgames[$player] = 1;						$pplaces[$player] = array(							1 => ($pos == 1 ? 1 : 0),							2 => ($pos == 2 ? 1 : 0),							3 => ($pos == 3 ? 1 : 0),							4 => ($pos == 4 ? 1 : 0),							'avg' => $pos						);					} else {						$ranking[$player] += ($points + 30) * $coef;						$pgames[$player]++;						$pplaces[$player][$pos]++;						$pplaces[$player]['avg'] += $pos;					}										$pos++;				}								$games++;				$gpd[$i]++;			}					fclose($f);		} else {			echo 'error';			break;		}	}		asort($ranking);	$ranking = array_reverse($ranking);				$body = '<p>Games played: ' . $games . '</p>	<table class="table table-striped table-condensed tablesorter">		<thead>		<tr>			<th>#</th>			<th>Player</th>			<th>Points</th>			<th>Games</th>			<th>League</th>			<th>PPG</th>			<th>1st%</th>			<th>2nd%</th>			<th>3rd%</th>			<th>4th%</th>			<th>Avg</th>		</tr>		</thead>		<tbody>';	$rankedbody = $body;		// I need number of ranked players first	$rankedplayers = 0;	foreach ($ranking as $player => $points) {		if ($pgames[$player] >= 20) {			$rankedplayers++;		}	}		$i = 1;	$iranked = 1;	$leaguebase = $rankedplayers / 15;	$leagueA = round($leaguebase * 4);	$leagueB = $leagueA + round($leaguebase * 5);	$leagueC = $leagueB + round($leaguebase * 6);		foreach ($ranking as $player => $points) {		$league = '-';		if ($pgames[$player] >= 20) {			if ($iranked <= $leagueA) {				$league = 'A';			} else if ($iranked <= $leagueB) {				$league = 'B';			} else if ($iranked <= $leagueC) {				$league = 'C';			}					$rankedbody .= '<tr class="' . ($pgames[$player] >= 20 ? 'ranked' : '') . '">';			$rankedbody .= '<td>' . ($iranked++) . '</td>';			$rankedbody .= '<td>' . $player . '</td>';			$rankedbody .= '<td>' . $points . '</td>';			$rankedbody .= '<td>' . $pgames[$player] . '</td>';			$rankedbody .= '<td class="league_'. $league . '">' . $league . '</td>';			$rankedbody .= '<td>' . round($points / $pgames[$player], 2) . '</td>';			$rankedbody .= '<td>' . round($pplaces[$player][1] / ($pgames[$player] / 100), 2) . '</td>';			$rankedbody .= '<td>' . round($pplaces[$player][2] / ($pgames[$player] / 100), 2) . '</td>';			$rankedbody .= '<td>' . round($pplaces[$player][3] / ($pgames[$player] / 100), 2) . '</td>';			$rankedbody .= '<td>' . round($pplaces[$player][4] / ($pgames[$player] / 100), 2) . '</td>';			$rankedbody .= '<td>' . round($pplaces[$player]['avg'] / $pgames[$player], 2) . '</td></tr>';								}		$body .= '<tr class="' . ($pgames[$player] >= 20 ? 'ranked' : '') . '">';		$body .= '<td>' . ($i++) . '</td>';		$body .= '<td>' . $player . '</td>';		$body .= '<td>' . $points . '</td>';		$body .= '<td>' . $pgames[$player] . '</td>';		$body .= '<td class="' . ($league != '-' ? 'league_'. $league : '') . '">' . $league . '</td>';		$body .= '<td>' . round($points / $pgames[$player], 2) . '</td>';		$body .= '<td>' . round($pplaces[$player][1] / ($pgames[$player] / 100), 2) . '</td>';		$body .= '<td>' . round($pplaces[$player][2] / ($pgames[$player] / 100), 2) . '</td>';		$body .= '<td>' . round($pplaces[$player][3] / ($pgames[$player] / 100), 2) . '</td>';		$body .= '<td>' . round($pplaces[$player][4] / ($pgames[$player] / 100), 2) . '</td>';		$body .= '<td>' . round($pplaces[$player]['avg'] / $pgames[$player], 2) . '</td></tr>';			}			$body .= '</tbody></table>' . date('Y/m/d H:i:s');	$rankedbody .= '</tbody></table>' . date('Y/m/d H:i:s');	$f = fopen('statsranked.php', 'w');		if ($f) {		fwrite($f, $rankedbody);				fclose($f);			} else {		echo 'error';	}		$f = fopen('statsfull.php', 'w');		if ($f) {		fwrite($f, $body);				fclose($f);			} else {		echo 'error';	}			// graphs	$days = '';	$days2 = '';	$gamez = '';	$gamez2 = '';	$threedays = '';	$avges = '';	$day1 = 0;	$day2 = 0;	$day3 = 0;		$i = 1;		foreach ($gpd as $day => $games) {		if (date('m', $day) == '11') { 			$days .= "'" . date('m/d', $day) . "', ";			$gamez .= $games . ', ';	    } else if (date('m', $day) == '12') {			$days2 .= "'" . date('m/d', $day) . "', ";			$gamez2 .= $games . ', ';		}						$threedays .= ($i) . ', ';		if ($i == 1) {			$day1 = $games;			$day2 = $games;			$day3 = $games;		} else if ($i == count($gpd)) {			$day1 = $day2;			$day2 = $games;			$day3 = $games;						$avges .= round(($day1 + $day2 + $day3) / 3, 2) . ', ';		} else {			$day1 = $day2;			$day2 = $day3;			$day3 = $games;						$avges .= round(($day1 + $day2 + $day3) / 3, 2) . ', ';		}				$i++;	}		$days = substr($days, 0, strlen($days) - 2);		$gamez = substr($gamez, 0, strlen($gamez) - 2);	$days2 = substr($days2, 0, strlen($days2) - 2);		$gamez2 = substr($gamez2, 0, strlen($gamez2) - 2);		$threedays = substr($threedays, 0, strlen($threedays) - 2);	$avges = substr($avges, 0, strlen($avges) - 2);		$body = sprintf("<div id=\"games\" style=\"width: 100%%; height: 400px\"></div>					 <div id=\"games2\" style=\"width: 100%%; height: 400px\"></div>					<div id=\"3dayavg\" style=\"width: 100%%; height: 400px\"></div>		<script type=\"text/javascript\">			var chart1;		$(document).ready(function() {			  chart1 = new Highcharts.Chart({				 chart: {					renderTo: 'games',					type: 'column'				 },				 legend: {					enabled: false				 },				 title: {					text: 'Games per day - November 2012'				 },				 xAxis: {					categories: [%s]				 },				 yAxis: {					title: {					   text: 'games played'					}				 },				 series: [{					name: 'Games',					data: [%s]				 }]			  });			  			  chart2 = new Highcharts.Chart({				 chart: {					renderTo: 'games2',					type: 'column'				 },				 legend: {					enabled: false				 },				 title: {					text: 'Games per day - December 2012'				 },				 xAxis: {					categories: [%s]				 },				 yAxis: {					title: {					   text: 'games played'					}				 },				 series: [{					name: 'Games',					data: [%s]				 }]			  });			  			   chart3 = new Highcharts.Chart({				 chart: {					renderTo: '3dayavg',					type: 'line'				 },				 legend: { 					enabled: false				 },				 title: {					text: '3 Day average'				 },				 xAxis: {					categories: [%s],					labels: {						enabled: false					}				 },				 yAxis: {					title: {					   enabled: false,					   text: ''					}				 },				 				 series: [{					name: 'Averages',					data: [%s]				 }]			   });			   		   });		</script>", $days, $gamez, $days2, $gamez2, $threedays, $avges);			$f = fopen('graphs.php', 'w');		if ($f) {		fwrite($f, $body);				fclose($f);			} else {		echo 'error';	}?>