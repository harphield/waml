<?php	// save initial leagues of players to a file	require 'lgs_01.php';		$banz = array(		'7e3cbd39f9334ff0d3c28aa01008cc52', // fake xkime		md5('jinxflow'),		md5('Urameshi'),		md5('NIGGER<3'),		md5('geodude3'),		'463e56f4c1e1f3b0da35d14c1629005e', // sexkime		md5('L?onardo'),		md5('RAPHEAL'),		md5('Splinter'),		md5('splinter'),		'cde1fc5c6b1b751f9b09bb057fc76b40', // the		md5('emofag'),		md5('buttfuck'),		md5('Kaneeeda'),		md5('mohammed'),		md5('?rophet'),		md5('youS'),		md5('myD'),		'0e0ec921dc42859d8e9d09f3cc9065b5', // fox		'bb0c78681f10218df83ba378160abba7', // falco		md5('Putin'),		md5('It'),		md5('Slam'),		md5('Jam'),		md5('kazooie')			);			$games = 0;	$pgames = array();	$ranking = array();	$pplaces = array();	$gpd = array();		$date_start = strtotime('2013-01-01 00:00:00');	$date_end = strtotime('2013-02-28 23:59:00');	$paths = array(		//'http://arcturus.su/tenhou/gamerecords/7447/sca',		'http://arcturus.su/tenhou/gamerecords/all/sca'	);		$lobbies = array(		'L7447',		'C5929'	);		for ($i = $date_start; $i <= (time() + 8*60*60 < $date_end ? time() + 8*60*60 : $date_end); $i += 24*60*60) {		$day = date('Ymd', $i);		foreach ($paths as $path) {			$f = fopen($path . $day . '.log', 'rb');						if ($f) {				if (!isset($gpd[$i])) {					$gpd[$i] = 0;				}								while ($line = fgets($f)) {					$ar = explode('|', $line);					$scores = end($ar);										$lobby = trim($ar[0]);					if (!in_array($lobby, $lobbies)) {						continue;					}										$gametype = trim($ar[2]);					// only kuitan ari and kuitan ari fast allowed					if (md5($gametype) != '21670224953821f8a0096236de5b13a7' && md5($gametype) != '38283f7700a3c76ede5e54b0ea4d23d7') {						continue;					}										$peoplez = explode(' ', $scores);										$game = array();					$game_value = 0;						$coef = 1.0; // 0 nonames					$nonames = 0;					foreach ($peoplez as $person) {						if (empty($person)) {							continue;						}												$sc = explode('(', $person);												$points = substr( trim($sc[1]), 0, strlen(trim($sc[1])) - 1);																		if ($sc[0] == 'NoName') {							$game[$sc[0] . '_' . $nonames++] = (int) $points;							$coef -= 0.2;							$game_value += 0.15;						} else {							$game[$sc[0]] = (int) $points;							$league = $leagues[md5($sc[0])]['league'];							if ($league == 'A') {								$game_value += 0.25;							} else if ($league == 'B') {								$game_value += 0.2;							} else {								$game_value += 0.15;							}						}											}										// removing sanma					if (count($game) < 4) {						echo $line;						die();						continue;					}										$pos = 1;					$currgame = array(						'players' => array(),						'date' => $i					);					foreach ($game as $player => $points) {						if (strpos($player, 'NoName', 0) === 0) {													$league = null;												} else if (!array_key_exists($player, $ranking) && !in_array(md5($player), $banz)) {														// The "value" of the game is 0.25 * A player + 0.20 * B player + 0.15 * C player + 0.15 * scrub							// the offset is +10 for A, +20 for B, +30 for C and scrub							// and -20% per NoName (on value, before offset, per NoName)							$league = $leagues[md5($player)]['league'];							if ($league == 'A') {								$offset = 10;							} else if ($league == 'B') {								$offset = 20;							} else {								$offset = 30;							}														$ranking[$player] = ($points * $game_value * $coef) + $offset;							//echo $player . ' ' . $league . '<br />';														$pgames[$player] = 1;							$pplaces[$player] = array(								1 => ($pos == 1 ? 1 : 0),								2 => ($pos == 2 ? 1 : 0),								3 => ($pos == 3 ? 1 : 0),								4 => ($pos == 4 ? 1 : 0),								'avg' => $pos							);						} else if (!in_array(md5($player), $banz)) {							$league = $leagues[md5($player)]['league'];							if ($league == 'A') {								$offset = 10;							} else if ($league == 'B') {								$offset = 20;							} else {								$offset = 30;							}																		$ranking[$player] += ($points * $game_value * $coef) + $offset;							//echo $player . ' ' . $league . '<br />';														$pgames[$player]++;							$pplaces[$player][$pos]++;							$pplaces[$player]['avg'] += $pos;						} else {							$league = 'N';						}												$league = (isset($league) ? $league : 'N');						$currgame['players'][] = array(							'name' => ((strpos($player, 'NoName', 0) === 0) ? 'NoName' : $player),							'league' => $league,							'points' => ((!in_array(md5($player), $banz) && (strpos($player, 'NoName', 0) !== 0)) ? ($points * $game_value * $coef) + $offset : 'X'),							'banned' => in_array(md5($player), $banz)						);												$pos++;					}										$gameslist[] = $currgame;										$games++;					$gpd[$i]++;				}							fclose($f);			} else {				echo 'error';				break;			}		}	}		asort($ranking);	$ranking = array_reverse($ranking);		$i = 1;	$leaguerankings = array(		'A' => array(),		'B' => array(),		'C' => array(),		'N' => array()	);	foreach ($ranking as $player => $points) {		$player = trim($player);		if (array_key_exists(md5($player), $leagues)) {			$league = $leagues[md5($player)]['league'];		} else {			$league = 'N';		}				if (!isset($pgames[$player]) || $pgames[$player] < 20) { 			continue;		}					if (!in_array($player, $leaguerankings[$league])) {			$leaguerankings[$league][] = $player;		}	}		$body = "<?php		\$leagues = array(\n	";	$counts = array(		'A' => array(			round((float)count($leaguerankings['A']) / 4.0),			count($leaguerankings['A']) - round((float)count($leaguerankings['A']) / 4.0)		),		'B' => array(			round((float)count($leaguerankings['B']) / 4.0),			count($leaguerankings['B']) - round((float)count($leaguerankings['B']) / 4.0)		),		'C' => array(			round((float)count($leaguerankings['C']) / 4.0),			count($leaguerankings['C']) - round((float)count($leaguerankings['C']) / 4.0)		),		'N' => array(			round((float)count($leaguerankings['N']) / 4.0),			count($leaguerankings['N']) - round((float)count($leaguerankings['N']) / 4.0)		)	);		print_r($leaguerankings);	print_r($counts);		$rankedbody = $body;		foreach ($ranking as $player => $points) {	    // players with less than 20 games are removed from leagues and have to start again		if ($pgames[$player] < 20) {			continue;		} else {					if (array_key_exists(md5($player), $leagues)) {				// was in a league before				$league = $leagues[md5($player)]['league'];				$standing = array_search($player, $leaguerankings[$league]);								if ($league == 'A') {					if ($standing >= $counts[$league][1]) {						$league = 'B'; // going down					}				} else if ($league == 'B') {					if ($standing < $counts[$league][0]) {						$league = 'A';					} else if ($standing >= $counts[$league][1]) {						$league = 'C'; // going down					}				} else {					if ($standing < $counts[$league][0]) {						$league = 'B';					} else if ($standing >= $counts[$league][1]) {						continue;					}				}			} else {							// league N				$league = 'N';				$standing = array_search($player, $leaguerankings[$league]);								if ($standing < $counts[$league][0]) {					$league = 'C';				}			}			$rankedbody .= '"' . md5($player) . '" => array("name" => "' . $player . '", "league" => "' . $league . '"), // ' . $player . "\n";		}	}			$rankedbody .= '); ?>';	$f = fopen('lgs.php', 'w');		if ($f) {		fwrite($f, $rankedbody);				fclose($f);			} else {		echo 'error';	}	?>